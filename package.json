{
  "name": "preview-sv",
  "displayName": "Preview .sv",
  "description": "Preview SystemVerilog (.sv) files as schematics using sv2svg (via uvx)",
  "version": "0.1.1",
  "publisher": "easytocloud",
  "engines": {
    "vscode": "^1.80.0"
  },
  "categories": [
    "Visualization"
  ],
  "keywords": [
    "systemverilog",
    "verilog",
    "schematic",
    "svg",
    "preview"
  ],
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/easytocloud/preview-sv.git"
  },
  "bugs": {
    "url": "https://github.com/easytocloud/preview-sv/issues"
  },
  "homepage": "https://github.com/easytocloud/preview-sv#readme",
  "icon": "media/icon.png",
  "galleryBanner": {
    "color": "#1e1e1e",
    "theme": "dark"
  },
  "preview": false,
  "activationEvents": [
    "onCommand:sv2svgPreview.open",
    "onCommand:sv2svgPreview.openToSide",
    "onCommand:sv2svgPreview.refresh",
    "onCommand:sv2svgPreview.toggleAuto",
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "sv2svgPreview.open",
        "title": "sv2svg: Open Preview"
      },
      {
        "command": "sv2svgPreview.openToSide",
        "title": "sv2svg: Open Preview to the Side",
        "icon": {
          "light": "media/menu-light.svg",
          "dark": "media/menu-dark.svg"
        }
      },
      {
        "command": "sv2svgPreview.refresh",
        "title": "sv2svg: Refresh Preview"
      },
      {
        "command": "sv2svgPreview.toggleAuto",
        "title": "sv2svg: Toggle Auto Preview"
      }
    ],
    "configuration": {
      "title": "Preview .sv",
      "properties": {
        "sv2svgPreview.runner": {
          "type": "string",
          "default": "uvx",
          "description": "Command used to invoke the runner (e.g., 'uvx' or a full path)."
        },
        "sv2svgPreview.command": {
          "type": "string",
          "default": "sv2svg",
          "description": "sv2svg sub-command passed to the runner (first arg)."
        },
        "sv2svgPreview.runnerArgs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Extra args passed to the runner before the command (e.g., ['--refresh'] for uvx)."
        },
        "sv2svgPreview.args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "-o",
            "-"
          ],
          "description": "Additional CLI args passed after the file path (default uses stdout via -o -)."
        },
        "sv2svgPreview.onSave": {
          "type": "string",
          "enum": [
            "refresh",
            "off"
          ],
          "default": "refresh",
          "description": "Auto-refresh preview when the document is saved."
        },
        "sv2svgPreview.onChange": {
          "type": "boolean",
          "default": false,
          "description": "Experimental: re-render while typing (debounced using a temp file)."
        },
        "sv2svgPreview.excludePattern": {
          "type": "string",
          "default": ".*_tb\\.sv$",
          "description": "Regex for filenames to exclude (e.g., testbenches like *_tb.sv)."
        },
        "sv2svgPreview.argsBeforeFile": {
          "type": "boolean",
          "default": false,
          "description": "Place CLI args before the input file path when invoking sv2svg."
        },
        "sv2svgPreview.autoOnOpen": {
          "type": "boolean",
          "default": false,
          "description": "Automatically open preview when a .sv file becomes active."
        },
        "sv2svgPreview.renderTimeoutMs": {
          "type": "number",
          "default": 15000,
          "description": "Timeout for rendering process in milliseconds."
        },
        "sv2svgPreview.renderOptions.inputOrder": {
          "type": "string",
          "enum": [
            "alpha",
            "ports",
            "auto"
          ],
          "default": "alpha",
          "description": "Order primary inputs: 'alpha' (alphabetical), 'ports' (module header order), or 'auto'."
        },
        "sv2svgPreview.renderOptions.gridX": {
          "type": "number",
          "default": 0,
          "description": "Snap X coordinates to this grid step (0 to disable)."
        },
        "sv2svgPreview.renderOptions.gridY": {
          "type": "number",
          "default": 0,
          "description": "Snap Y coordinates to this grid step (0 to disable)."
        },
        "sv2svgPreview.renderOptions.noSymmetry": {
          "type": "boolean",
          "default": false,
          "description": "Disable symmetric sibling placement around shared driver centerlines."
        },
        "sv2svgPreview.renderOptions.style": {
          "type": "string",
          "enum": [
            "classic",
            "blueprint",
            "midnight",
            "mono",
            "vibrant",
            "dark"
          ],
          "default": "classic",
          "description": "Color/line weight preset for the generated diagram."
        },
        "sv2svgPreview.renderOptions.orientation": {
          "type": "string",
          "enum": [
            "horizontal",
            "vertical"
          ],
          "default": "horizontal",
          "description": "Diagram layout: horizontal (left-to-right) or vertical (top-to-bottom)."
        },
        "sv2svgPreview.renderOptions.table": {
          "type": "boolean",
          "default": false,
          "description": "Include truth table in the diagram."
        },
        "sv2svgPreview.renderOptions.noCaption": {
          "type": "boolean",
          "default": false,
          "description": "Suppress the 'Module: modulename' caption."
        },
        "sv2svgPreview.renderOptions.fillGates": {
          "type": "boolean",
          "default": false,
          "description": "Enable subtle fill colors for logic gates."
        },
        "sv2svgPreview.renderOptions.signalStyles": {
          "type": "boolean",
          "default": false,
          "description": "Use different line styles for signal types (solid=primary, dashed=intermediate)."
        },
        "sv2svgPreview.renderOptions.fanoutWires": {
          "type": "boolean",
          "default": false,
          "description": "Use thicker wires for signals with higher fan-out."
        }
      }
    },
    "menus": {
      "editor/title": [
        {
          "command": "sv2svgPreview.openToSide",
          "group": "navigation",
          "when": "resourceExtname == .sv"
        }
      ],
      "explorer/context": [
        {
          "command": "sv2svgPreview.open",
          "when": "resourceExtname == .sv",
          "group": "2_preview"
        },
        {
          "command": "sv2svgPreview.openToSide",
          "when": "resourceExtname == .sv",
          "group": "2_preview"
        },
        {
          "command": "sv2svgPreview.refresh",
          "when": "resourceExtname == .sv",
          "group": "2_preview"
        },
        {
          "command": "sv2svgPreview.toggleAuto",
          "when": "resourceExtname == .sv",
          "group": "2_preview"
        }
      ],
      "commandPalette": [
        {
          "command": "sv2svgPreview.open"
        },
        {
          "command": "sv2svgPreview.openToSide"
        },
        {
          "command": "sv2svgPreview.refresh"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./"
  },
  "devDependencies": {
    "@types/node": "^20.0.0",
    "typescript": "^5.3.0",
    "@types/vscode": "^1.80.0"
  }
}
